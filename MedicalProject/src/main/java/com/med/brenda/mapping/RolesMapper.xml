<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.med.brenda.dao.RolesMapper">
  <resultMap id="BaseResultMap" type="com.med.brenda.model.Roles">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="rolename" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="roledesc" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="createtime" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="modifytime" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="adduid" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="moduid" javaType="java.lang.Long" jdbcType="BIGINT" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, rolename, roledesc, createtime, modifytime, adduid, moduid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_roles
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_roles
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.med.brenda.model.Roles">
  <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
		SELECT LAST_INSERT_ID() AS id
		</selectKey>
    insert into t_roles (rolename, roledesc, 
      createtime, modifytime, adduid, 
      moduid)
    values (#{rolename,jdbcType=VARCHAR}, #{roledesc,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=BIGINT}, #{modifytime,jdbcType=BIGINT}, #{adduid,jdbcType=BIGINT}, 
      #{moduid,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.med.brenda.model.Roles">
    insert into t_roles
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="rolename != null">
        rolename,
      </if>
      <if test="roledesc != null">
        roledesc,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="modifytime != null">
        modifytime,
      </if>
      <if test="adduid != null">
        adduid,
      </if>
      <if test="moduid != null">
        moduid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="rolename != null">
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="roledesc != null">
        #{roledesc,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=BIGINT},
      </if>
      <if test="modifytime != null">
        #{modifytime,jdbcType=BIGINT},
      </if>
      <if test="adduid != null">
        #{adduid,jdbcType=BIGINT},
      </if>
      <if test="moduid != null">
        #{moduid,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.med.brenda.model.Roles">
    update t_roles
    <set>
      <if test="rolename != null">
        rolename = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="roledesc != null">
        roledesc = #{roledesc,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=BIGINT},
      </if>
      <if test="modifytime != null">
        modifytime = #{modifytime,jdbcType=BIGINT},
      </if>
      <if test="adduid != null">
        adduid = #{adduid,jdbcType=BIGINT},
      </if>
      <if test="moduid != null">
        moduid = #{moduid,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.med.brenda.model.Roles">
    update t_roles
    set rolename = #{rolename,jdbcType=VARCHAR},
      roledesc = #{roledesc,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=BIGINT},
      modifytime = #{modifytime,jdbcType=BIGINT},
      adduid = #{adduid,jdbcType=BIGINT},
      moduid = #{moduid,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>